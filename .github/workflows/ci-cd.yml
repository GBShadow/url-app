name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  JWT_PRIVATE_KEY: ${{ vars.JWT_PRIVATE_KEY }}
  JWT_PUBLIC_KEY: ${{ vars.JWT_PUBLIC_KEY }}
  DATABASE_URL: ${{ vars.DATABASE_URL }}
  DOMAIN: ${{ vars.DOMAIN }}
  PORT: ${{ vars.PORT }}
jobs:
  ci:
    name: 🔍 Lint & Test (Docker Compose)
    runs-on: ubuntu-latest
    environment: dev

    services:
      docker:
        image: docker:20.10.24-dind

    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Compose
        run: |
          docker compose --version
      
      - name: 🔧 Subir containers (sem rodar dev)
        run: docker compose -f docker-compose.yml -f docker-compose.ci.yml up -d --build

      - name: 🐳 Build e subir containers
        env:
          JWT_PRIVATE_KEY: ${{ vars.JWT_PRIVATE_KEY }}
          JWT_PUBLIC_KEY: ${{ vars.JWT_PUBLIC_KEY }}
          DATABASE_URL: ${{ vars.DATABASE_URL }}
          DOMAIN: ${{ vars.DOMAIN }}
          PORT: ${{ vars.PORT }}
        run: |
          docker compose up -d --build
          docker compose ps

      - name: ⏳ Aguardar serviços subirem
        run: |
          sleep 15

      - name: ✅ Rodar Lint (dentro do container app)
        run: docker exec app_dev npm run lint

      - name: 🧪 Testes Unitários
        run: docker exec app_dev npm run test

      - name: 🧪 Testes End-to-End
        run: docker exec app_dev npm run test:e2e

      - name: 🚫 Parar containers
        if: always()
        run: docker compose down

  # deploy:
  #   name: 🚀 Deploy no GCP (Cloud Run)
  #   runs-on: ubuntu-latest
  #   needs: ci
  #   if: github.ref == 'refs/heads/main'

  #   steps:
  #     - name: 📥 Checkout código
  #       uses: actions/checkout@v4

  #     - name: 🔐 Autenticar com GCP
  #       uses: google-github-actions/auth@v2
  #       with:
  #         credentials_json: '${{ secrets.GCP_SA_KEY }}'

  #     - name: ☁️ Configurar Google Cloud CLI
  #       uses: google-github-actions/setup-gcloud@v2
  #       with:
  #         project_id: ${{ secrets.GCP_PROJECT_ID }}

  #     - name: 🐳 Build Docker Image para produção
  #       run: |
  #         gcloud builds submit --tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/link-shortener-api

  #     - name: 🚀 Deploy no Cloud Run
  #       run: |
  #         gcloud run deploy link-shortener-api \
  #           --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/link-shortener-api \
  #           --platform managed \
  #           --region ${{ secrets.GCP_REGION }} \
  #           --allow-unauthenticated \
  #           --set-env-vars PORT=3000,DOMAIN=https://api.encurtador.com
