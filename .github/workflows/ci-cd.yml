name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    name: 🔍 Lint & Test (Docker Compose)
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4

      # - name: 🐳 Instalar Docker Compose (caso necessário)
      #   run: |
      #     sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      #     sudo chmod +x /usr/local/bin/docker-compose
      #     docker-compose --version

      - name: 🐳 Subir containers com docker compose
        run: docker compose up -d --build

      - name: ⏳ Aguardar banco de dados inicializar
        run: sleep 20

      - name: ✅ Rodar Lint
        run: docker exec app_dev npm run lint

      - name: 🧪 Testes Unitários
        run: docker exec app_dev npm run test

      - name: 🧪 Testes End-to-End
        run: docker exec app_dev npm run test:e2e

      - name: 🚫 Parar containers
        if: always()
        run: docker compose down

  # deploy:
  #   name: 🚀 Deploy no GCP (Cloud Run)
  #   runs-on: ubuntu-latest
  #   needs: ci
  #   if: github.ref == 'refs/heads/main'

  #   steps:
  #     - name: 📥 Checkout código
  #       uses: actions/checkout@v4

  #     - name: 🔐 Autenticar com GCP
  #       uses: google-github-actions/auth@v2
  #       with:
  #         credentials_json: '${{ secrets.GCP_SA_KEY }}'

  #     - name: ☁️ Configurar Google Cloud CLI
  #       uses: google-github-actions/setup-gcloud@v2
  #       with:
  #         project_id: ${{ secrets.GCP_PROJECT_ID }}

  #     - name: 🐳 Build Docker Image
  #       run: |
  #         gcloud builds submit --tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/link-shortener-api

  #     - name: 🚀 Deploy no Cloud Run
  #       run: |
  #         gcloud run deploy link-shortener-api \
  #           --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/link-shortener-api \
  #           --platform managed \
  #           --region ${{ secrets.GCP_REGION }} \
  #           --allow-unauthenticated \
  #           --set-env-vars PORT=3000,DOMAIN=https://api.encurtador.com
